Arborescence : 
    app/ :  La configuration de l'application (dans un Framework c'est là où on modifie pour l'utilisation de notre app).
    src/ : Le code PHP et HTML spécifique à notre projet (dans un Framework c'est là où on créé du code pour l'utilisation de notre app).
    vendor/ : Code général (coeur) de l'application et les entités.
    web/ : Répertoire web racine. Le point d'entrée de notre application (index.php, img/, photo/, js/, css/, font/). Assets chez Symphony et Silex.
---------------------------------------------------
Nature des différents fichiers : 

app/
    Config/
        parameters.php : 
        Contient toutes les informations de connexion à la BDD... et autres paramètres...
    
    Config.php:
    Contient l'inclusion des paramètres de connexion à la BDD et des les retourne dans une méthode qu'on va appeler getParametersConnect()

vendor/
    autoload.php : 
    Permet d'inclure les bons fichiers lors d'un 'new' (lors d'une instanciation).
    Attention : seuls les controler sont dans le dossier src/, il faut donc préciser que si le namespace n'est pas 'Controller' alors les fichiers sont dans vendor/.
    Autre subtilité : le contrôleur général (Controller\Controller) est également dans vendor/. 

    Entity/
        Produit.php, Membre.php, Commande.php 
        Classes qui contiennent toutes les propriétés (private) de nos entités et les getters et setters. POPO (Plain Old PHP Object)

web/
    index.php : 
    Clé d'entrée de notre application (SILEX : index.php / Symfony : app.php)

vendor/
    Manager/
        PDOManager.php : 
        Cette classe représente la connexion à la BDD. Elle contient et nous retourne notre objet PDO grâce auquel nous pourrons effectuer des requêtes. 
        Cette classe est un Singleton (singlette en français). Cela signifie qu'il ne peut y avoir qu'un seul objet issu de cette classe.

        EntityRepository.php : 
        Un repository centralise tout ce qui touche à la BDD et la récupération des entités. Concrètement, il ne doit pas y avoir de requête ailleurs que dans un repository.
        Si une entité a besoin de requêtes spécifiques (exemple : jointure) dans ce cas les requêtes seront codées directement dans le repository en question. 